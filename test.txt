it('logAccountAudit: captures Long Account Number difference safely', fakeAsync(() => {
  component.isCloneAccount = false;
  component.oldAccountValues = { longacctnum: 'OLD-LONG' } as any;
  component.account = { accountNbr: 'A1', longacctnum: 'NEW-LONG', regionDescription: 'East' } as any;

  // minimal data
  component.regions = [{ regionId: 1, regionDescription: 'East' }] as any;
  (component as any).cbStatus = { value: ['A'] };
  (component as any).cbDivision = { value: ['20'] };
  component.divisions = [{ divisionId: 20, divisionDesc: 'Div A', divisionCd: 'DA' }] as any;

  spyOn(component.acctService, 'getAccountStatusDesc').and.returnValue('OPEN');
  spyOn(component.feeApiservice, 'postRequest').and.returnValue(of({}));

  // Act
  (component as any).logAccountAudit();
  tick();

  // Get body
  const call = (component.feeApiservice.postRequest as jasmine.Spy).calls.mostRecent();
  expect(call).toBeDefined();

  const [, body] = call.args;
  expect(body).toBeDefined();

  const auditArr = JSON.parse(body.acctAuditData);
  expect(auditArr.length).toBeGreaterThan(0);

  const audit = auditArr[0];
  expect(audit.OldAccountValue).toContain('OLD-LONG');
  expect(audit.NewAccountValue).toContain('NEW-LONG');
}));
