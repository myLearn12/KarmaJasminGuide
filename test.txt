it('onUpdateModalClick(): else branch should deep clone divConBraMap, call helpers and show modal', () => {
  // Arrange
  component.isRowSelected = true;
  component.divConBraMap = {
    divConBraId: 99,
    descr: 'Test Map',
    someOtherField: 'x'
  } as any;

  // Spy the helper methods that should be called in the else branch
  const setInitialSpy = spyOn(component as any, 'setIntialvalues');
  const getDivSpy = spyOn(component as any, 'getDivisionComboBoxVal');
  const getControlSpy = spyOn(component as any, 'getControlIdComboBoxValue');
  const getBranchSpy = spyOn(component as any, 'getBranchCdComboBoxValue');

  // Spy ActivateFormControls as well (it is called before the if/else)
  const activateSpy = spyOn(component as any, 'ActivateFormControls');

  // Defensive modal spy: if _actionModal exists, spy its show(); otherwise create a fake object to spy
  if (!(component as any)._actionModal) {
    (component as any)._actionModal = { show: () => {} };
  }
  const modalShowSpy = spyOn((component as any)._actionModal, 'show');

  // Act
  component.onUpdateModalClick();

  // Assert: deep clone (equal but not same reference)
  expect(component.selectedDivConBraMap).toEqual(component.divConBraMap);
  expect(component.selectedDivConBraMap).not.toBe(component.divConBraMap);

  // Assert: helpers were called
  expect(setInitialSpy).toHaveBeenCalled();
  expect(getDivSpy).toHaveBeenCalled();
  expect(getControlSpy).toHaveBeenCalled();
  expect(getBranchSpy).toHaveBeenCalled();

  // ActivateFormControls should have been called
  expect(activateSpy).toHaveBeenCalled();

  // Modal should be shown
  expect(modalShowSpy).toHaveBeenCalled();

  // Titles/types set
  expect(component.actionModalTitle).toBe('Update');
  expect(component.actionModalType).toBe(ActionType.update);
});
