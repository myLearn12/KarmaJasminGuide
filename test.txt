it('getCostCenterComboBoxValue(): should set costCenterComboBox.value when costCenterNbr is valid and found', () => {
  // Arrange
  component.costCenters = [
    { costCenterNbr: '100', costCenterDesc: 'Finance' },
    { costCenterNbr: '200', costCenterDesc: 'Tax' }
  ] as any;

  component.altdivabacostcntrmap = { costCenterNbr: '200' } as any;

  (component as any).costCenterComboBox = { value: null };

  const utilsSpy = spyOn(component['utils'], 'isStringValid').and.returnValue(true);

  // Act
  (component as any).getCostCenterComboBoxValue();

  // Assert
  expect(utilsSpy).toHaveBeenCalledWith('200');
  expect((component as any).costCenterComboBox.value).toEqual(['200']);
});