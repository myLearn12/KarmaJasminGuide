it('GenerateTableRows(): on error should display error, set loading false, and dispatch LOADINGACTION(false)', fakeAsync(() => {
  // Arrange
  component.loading = true;

  // Mock dependencies
  const errorResponse = { error: { statusMessage: 'Server failed' } };
  const getSpy = spyOn(component.feeApiservice, 'getRequest').and.returnValue(throwError(() => errorResponse));
  const dispSpy = spyOn(component as any, 'displayServiceErrors').and.callFake(() => {});
  const dispatchSpy = spyOn(component['store'], 'dispatch').and.callFake(() => {});

  // Act
  component.GenerateTableRows();
  tick();

  // Assert
  expect(getSpy).toHaveBeenCalledWith(component.appConfigService.getAllDivConBraMappingUrl);
  expect(dispSpy).toHaveBeenCalledWith('Server failed');
  expect(component.loading).toBeFalse();
  expect(dispatchSpy).toHaveBeenCalledWith(jasmine.any(LOADINGACTION));
}));
