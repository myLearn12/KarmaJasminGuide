it('GenerateTableRows(): on error should display service errors, clear loading and dispatch LOADINGACTION(false)', fakeAsync(() => {
  // Arrange
  const errorResponse = { error: { statusMessage: 'Server failed!' } };

  // stub feeApiservice.getRequest to throw
  spyOn(component.feeApiservice, 'getRequest').and.returnValue(throwError(() => errorResponse));

  const displaySpy = spyOn(component as any, 'displayServiceErrors');
  const dispatchSpy = spyOn(component['store'], 'dispatch');

  // Act
  component.GenerateTableRows();
  tick(); // flush async

  // Assert
  expect(displaySpy).toHaveBeenCalledWith('Server failed!');
  expect(component.loading).toBeFalse();
  expect(dispatchSpy).toHaveBeenCalledWith(jasmine.any(LOADINGACTION));
}));