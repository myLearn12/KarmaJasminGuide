it('onUpdateModalClick(): else branch should deep clone autocom, call helper methods and show modal', () => {
  // Arrange
  component.isRowSelected = true;  // to trigger else branch
  component.autocom = { autoComId: 1, regionId: 10, controlId: 20 } as any;

  // spies for methods called in else branch
  const setInitialSpy = spyOn(component as any, 'setIntialvalues');
  const getRegionSpy = spyOn(component as any, 'getRegionComboBoxValue');
  const getControlSpy = spyOn(component as any, 'getControlIdComboBoxValue');
  const modalSpy = spyOn((component as any)._actionModal, 'show');

  // Act
  component.onUpdateModalClick();

  // Assert
  // Deep clone check
  expect(component.selectedAutocom).toEqual(component.autocom);
  expect(component.selectedAutocom).not.toBe(component.autocom);

  // Method call verification
  expect(setInitialSpy).toHaveBeenCalled();
  expect(getRegionSpy).toHaveBeenCalled();
  expect(getControlSpy).toHaveBeenCalled();
  expect(modalSpy).toHaveBeenCalled();

  // Verify modal title/type also set correctly
  expect(component.actionModalTitle).toBe('Update');
  expect(component.actionModalType).toBe(ActionType.update);
});