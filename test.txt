it('onProcessButtonClick: should return early when validateFormControls() is true', () => {
  spyOn(component, 'validateFormControls').and.returnValue(true);
  // ensure nothing else runs
  const procSpy = spyOn(component as any, 'processRecord');
  component.onProcessButtonClick();
  expect(procSpy).not.toHaveBeenCalled();
});

it('onProcessButtonClick: when accountRadioButton=1 and no SpecAcct flags set should show warning and return', () => {
  spyOn(component, 'validateFormControls').and.returnValue(false);

  // set radio and all SpecAcct flags false
  (component as any).accountRadioButton = { value: '1' };
  (component as any).SpecAcct1 = false;
  (component as any).SpecAcct2 = false;
  (component as any).SpecAcct3 = false;
  (component as any).SpecAcct4 = false;
  (component as any).SpecAcct5 = false;

  const msgSpy = spyOn(component as any, 'SetMessageTypeAndValue');
  const procSpy = spyOn(component as any, 'processRecord');

  component.onProcessButtonClick();

  expect(msgSpy).toHaveBeenCalledWith(
    jasmine.anything(), // BlockMessageType.warning (or pass the exact enum if imported in spec)
    'Atleast One Account needed to be added for specific account restore option.'
  );
  expect(procSpy).not.toHaveBeenCalled();
});

it('onProcessButtonClick: when selectedMonthEndDate is today should set actionMessage and show confirm modal', () => {
  spyOn(component, 'validateFormControls').and.returnValue(false);

  // radio not relevant for this branch (use something other than '1' to skip previous branch)
  (component as any).accountRadioButton = { value: '0' };

  // stub utils.isTodaysDate to return true
  spyOn(component['utils'], 'isTodaysDate').and.returnValue(true);

  // spy modal
  (component as any)._confirmModal = { show: jasmine.createSpy('show') };

  component.onProcessButtonClick();

  expect(component.actionMessage).toContain("Date selected is Today's Date");
  expect((component as any)._confirmModal.show).toHaveBeenCalled();
});

it('onProcessButtonClick: should call processRecord when everything is valid and not today', () => {
  spyOn(component, 'validateFormControls').and.returnValue(false);

  (component as any).accountRadioButton = { value: '0' }; // not the specific-account path
  spyOn(component['utils'], 'isTodaysDate').and.returnValue(false);

  const procSpy = spyOn(component as any, 'processRecord');

  component.onProcessButtonClick();

  expect(procSpy).toHaveBeenCalled();
});