it('onUpdateModalClick: when row is selected should deep clone revShrdivmap, set values, and show modal', () => {
  component.isRowSelected = true;
  component.revShrdivmap = { id: 1, name: 'Test Map' } as any;

  const setInitialSpy = spyOn(component as any, 'setIntialValues').and.stub();
  const getRevSpy     = spyOn(component as any, 'getRevenueShareComboBoxValue').and.stub();
  const getDivSpy     = spyOn(component as any, 'getDivisionComboBoxVal').and.stub();

  // Ensure modal present
  (component as any)._actionModal = (component as any)._actionModal || { show: () => {} };
  const modalSpy = spyOn((component as any)._actionModal, 'show');

  component.onUpdateModalClick();

  expect((component as any).selectedRevShrDivMap).toEqual(component.revShrdivmap);
  expect((component as any).selectedRevShrDivMap).not.toBe(component.revShrdivmap);
  expect(setInitialSpy).toHaveBeenCalled();
  expect(getRevSpy).toHaveBeenCalled();
  expect(getDivSpy).toHaveBeenCalled();
  expect(modalSpy).toHaveBeenCalled();
  expect(component.actionModalTitle).toBe('Update');
  expect(component.actionModalType).toBe(ActionType.update);
});
