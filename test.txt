it('InitialDataLoad: should set infoBlockMessage from error when it contains 14th business day', fakeAsync(() => {
  // Arrange
  (component as any).appConfigService = {
    getProcessControlConfigByType: '/mock-url/',
    getProcessControlConfigById: '/mock-id-url/'
  };

  const mockError = {
    error: { statusMessage: 'Error: 14th business day exceeded' }
  };

  spyOn(component.feeApiservice, 'getRequest').and.returnValue(
    throwError(() => mockError)
  );

  const displaySpy = spyOn(component as any, 'displayServiceErrors');

  // Act
  (component as any).InitialDataLoad();
  tick();

  // Assert
  expect(component.infoBlockMessage).toBe('14th business day exceeded'); // sliced after "Error: "
  expect(displaySpy).toHaveBeenCalledWith('Error: 14th business day exceeded');
  expect(component.loading).toBeFalse();
  expect(component.store.dispatch).toHaveBeenCalledWith(jasmine.any(LOADINGACTION));
}));
