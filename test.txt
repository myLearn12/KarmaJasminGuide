// ---- Clone mode = true ----
it('CloneAccountSetup() when clone → updates title, readOnly, zeroes fields, clears revshare', () => {
  const utilsStub = {
    CreateRequiredFormControl: () => ({}),
    CreateDateFormControl: () => ({}),
    numberUnformatter: (n: any) => n, // returns the number given
  };
  const acctServiceStub = {
    CheckCloneAccount: () => true, // clone mode ON
    loadStatusData: () => [],
  };
  const storeMock = { pipe: jasmine.createSpy('pipe').and.returnValue(of(false)), dispatch: () => {} };

  const c = new EditaccountComponent({} as any, {} as any, storeMock as any, utilsStub as any, acctServiceStub as any);

  // initial state
  c.PageTitle = 'Edit Account Details';
  c.isAcctNumReadOnly = true;
  c.account = {
    estacc: 123, estpp: 1, actpp: 2, endpp: 3, feepp: 4, cashpp: 5, accepfee: 6, revshare: 99
  } as any;

  // act
  c.CloneAccountSetup();

  // assert clone flags
  expect(c.isCloneAccount).toBeTrue();
  expect(c.PageTitle).toBe('Clone Account Details');
  expect(c.isAcctNumReadOnly).toBeFalse();

  // numeric fields reset to 0
  expect(c.account.estacc).toBe(0);
  expect(c.account.estpp).toBe(0);
  expect(c.account.actpp).toBe(0);
  expect(c.account.endpp).toBe(0);
  expect(c.account.feepp).toBe(0);
  expect(c.account.cashpp).toBe(0);
  expect(c.account.accepfee).toBe(0);

  // revshare cleared
  expect(c.account.revshare).toBeNull();
});

// ---- Clone mode = false ----
it('CloneAccountSetup() when not clone → keeps title, sets readOnly true, does not change amounts', () => {
  const utilsStub = {
    CreateRequiredFormControl: () => ({}),
    CreateDateFormControl: () => ({}),
    numberUnformatter: (n: any) => n,
  };
  const acctServiceStub = {
    CheckCloneAccount: () => false, // clone mode OFF
    loadStatusData: () => [],
  };
  const storeMock = { pipe: jasmine.createSpy('pipe').and.returnValue(of(false)), dispatch: () => {} };

  const c = new EditaccountComponent({} as any, {} as any, storeMock as any, utilsStub as any, acctServiceStub as any);

  // initial state
  c.PageTitle = 'Edit Account Details';
  c.isAcctNumReadOnly = false;
  c.account = {
    estacc: 123, estpp: 1, actpp: 2, endpp: 3, feepp: 4, cashpp: 5, accepfee: 6, revshare: 99
  } as any;

  // act
  c.CloneAccountSetup();

  // assert non-clone flags
  expect(c.isCloneAccount).toBeFalse();
  expect(c.PageTitle).toBe('Edit Account Details'); // unchanged
  expect(c.isAcctNumReadOnly).toBeTrue();

  // amounts unchanged
  expect(c.account.estacc).toBe(123);
  expect(c.account.estpp).toBe(1);
  expect(c.account.actpp).toBe(2);
  expect(c.account.endpp).toBe(3);
  expect(c.account.feepp).toBe(4);
  expect(c.account.cashpp).toBe(5);
  expect(c.account.accepfee).toBe(6);
  expect(c.account.revshare).toBe(99);
});
